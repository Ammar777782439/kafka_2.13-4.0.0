[2025-05-17 12:07:59,152] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2025-05-17 12:07:59,642] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2025-05-17 12:07:59,645] INFO [ControllerServer id=1] Starting controller (kafka.server.ControllerServer)
[2025-05-17 12:08:00,054] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
[2025-05-17 12:08:00,100] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(CONTROLLER) (kafka.network.SocketServer)
[2025-05-17 12:08:00,109] INFO CONTROLLER: resolved wildcard host to DESKTOP-T3O0CHU. (org.apache.kafka.metadata.ListenerInfo)
[2025-05-17 12:08:00,115] INFO authorizerStart completed for endpoint CONTROLLER. Endpoint is now READY. (org.apache.kafka.server.network.EndpointReadyFutures)
[2025-05-17 12:08:00,118] INFO [SharedServer id=1] Starting SharedServer (kafka.server.SharedServer)
[2025-05-17 12:08:00,172] INFO [LogLoader partition=__cluster_metadata-0, dir=/home/ammar/kafka_data/broker1_4.0.0] Recovering unflushed segment 0. 0 recovered for __cluster_metadata-0. (org.apache.kafka.storage.internals.log.LogLoader)
[2025-05-17 12:08:00,174] INFO [LogLoader partition=__cluster_metadata-0, dir=/home/ammar/kafka_data/broker1_4.0.0] Loading producer state till offset 0 (org.apache.kafka.storage.internals.log.UnifiedLog)
[2025-05-17 12:08:00,175] INFO [LogLoader partition=__cluster_metadata-0, dir=/home/ammar/kafka_data/broker1_4.0.0] Reloading from producer snapshot and rebuilding producer state from offset 0 (org.apache.kafka.storage.internals.log.UnifiedLog)
[2025-05-17 12:08:00,179] INFO [LogLoader partition=__cluster_metadata-0, dir=/home/ammar/kafka_data/broker1_4.0.0] Producer state recovery took 1ms for snapshot load and 0ms for segment recovery from offset 0 (org.apache.kafka.storage.internals.log.UnifiedLog)
[2025-05-17 12:08:00,201] INFO [ProducerStateManager partition=__cluster_metadata-0] Wrote producer snapshot at offset 41 with 0 producer ids in 8 ms. (org.apache.kafka.storage.internals.log.ProducerStateManager)
[2025-05-17 12:08:00,210] INFO [LogLoader partition=__cluster_metadata-0, dir=/home/ammar/kafka_data/broker1_4.0.0] Loading producer state till offset 41 (org.apache.kafka.storage.internals.log.UnifiedLog)
[2025-05-17 12:08:00,210] INFO [LogLoader partition=__cluster_metadata-0, dir=/home/ammar/kafka_data/broker1_4.0.0] Reloading from producer snapshot and rebuilding producer state from offset 41 (org.apache.kafka.storage.internals.log.UnifiedLog)
[2025-05-17 12:08:00,213] INFO [ProducerStateManager partition=__cluster_metadata-0] Loading producer state from snapshot file 'SnapshotFile(offset=41, file=/home/ammar/kafka_data/broker1_4.0.0/__cluster_metadata-0/00000000000000000041.snapshot)' (org.apache.kafka.storage.internals.log.ProducerStateManager)
[2025-05-17 12:08:00,214] INFO [LogLoader partition=__cluster_metadata-0, dir=/home/ammar/kafka_data/broker1_4.0.0] Producer state recovery took 3ms for snapshot load and 0ms for segment recovery from offset 41 (org.apache.kafka.storage.internals.log.UnifiedLog)
[2025-05-17 12:08:00,247] INFO Initialized snapshots with IDs SortedSet() from /home/ammar/kafka_data/broker1_4.0.0/__cluster_metadata-0 (kafka.raft.KafkaMetadataLog$)
[2025-05-17 12:08:00,261] INFO [raft-expiration-reaper]: Starting (kafka.raft.TimingWheelExpirationService$ExpiredOperationReaper)
[2025-05-17 12:08:00,274] INFO [RaftManager id=1] Reading KRaft snapshot and log as part of the initialization (org.apache.kafka.raft.KafkaRaftClient)
[2025-05-17 12:08:00,299] INFO [RaftManager id=1] Starting voters are VoterSet(voters={1=VoterNode(voterKey=ReplicaKey(id=1, directoryId=<undefined>), listeners=Endpoints(endpoints={ListenerName(CONTROLLER)=localhost/127.0.0.1:9093}), supportedKRaftVersion=SupportedVersionRange[min_version:0, max_version:0])}) (org.apache.kafka.raft.KafkaRaftClient)
[2025-05-17 12:08:00,302] INFO [RaftManager id=1] Starting request manager with static voters: [localhost:9093 (id: 1 rack: null isFenced: false)] (org.apache.kafka.raft.KafkaRaftClient)
[2025-05-17 12:08:00,318] INFO [RaftManager id=1] Attempting durable transition to ResignedState(localId=1, epoch=1, voters=[1], electionTimeoutMs=1533, unackedVoters=[], preferredSuccessors=[]) from null (org.apache.kafka.raft.QuorumState)
[2025-05-17 12:08:00,348] INFO [RaftManager id=1] Completed transition to ResignedState(localId=1, epoch=1, voters=[1], electionTimeoutMs=1533, unackedVoters=[], preferredSuccessors=[]) from null (org.apache.kafka.raft.QuorumState)
[2025-05-17 12:08:00,356] INFO [RaftManager id=1] Completed transition to ProspectiveState(epoch=1, leaderId=OptionalInt[1], retries=1, votedKey=Optional.empty, epochElection=EpochElection(voterStates={1=VoterState(replicaKey=ReplicaKey(id=1, directoryId=<undefined>), state=GRANTED)}), electionTimeoutMs=1159, highWatermark=Optional.empty) from ResignedState(localId=1, epoch=1, voters=[1], electionTimeoutMs=1533, unackedVoters=[], preferredSuccessors=[]) (org.apache.kafka.raft.QuorumState)
[2025-05-17 12:08:00,359] INFO [RaftManager id=1] Attempting durable transition to CandidateState(localId=1, localDirectoryId=kXUJD2A9YWQ2GIJctGNUGg, epoch=2, retries=1, epochElection=EpochElection(voterStates={1=VoterState(replicaKey=ReplicaKey(id=1, directoryId=<undefined>), state=GRANTED)}), highWatermark=Optional.empty, electionTimeoutMs=1877) from ProspectiveState(epoch=1, leaderId=OptionalInt[1], retries=1, votedKey=Optional.empty, epochElection=EpochElection(voterStates={1=VoterState(replicaKey=ReplicaKey(id=1, directoryId=<undefined>), state=GRANTED)}), electionTimeoutMs=1159, highWatermark=Optional.empty) (org.apache.kafka.raft.QuorumState)
[2025-05-17 12:08:00,371] INFO [RaftManager id=1] Completed transition to CandidateState(localId=1, localDirectoryId=kXUJD2A9YWQ2GIJctGNUGg, epoch=2, retries=1, epochElection=EpochElection(voterStates={1=VoterState(replicaKey=ReplicaKey(id=1, directoryId=<undefined>), state=GRANTED)}), highWatermark=Optional.empty, electionTimeoutMs=1877) from ProspectiveState(epoch=1, leaderId=OptionalInt[1], retries=1, votedKey=Optional.empty, epochElection=EpochElection(voterStates={1=VoterState(replicaKey=ReplicaKey(id=1, directoryId=<undefined>), state=GRANTED)}), electionTimeoutMs=1159, highWatermark=Optional.empty) (org.apache.kafka.raft.QuorumState)
[2025-05-17 12:08:00,376] INFO [RaftManager id=1] Attempting durable transition to Leader(localReplicaKey=ReplicaKey(id=1, directoryId=kXUJD2A9YWQ2GIJctGNUGg), epoch=2, epochStartOffset=41, highWatermark=Optional.empty, voterStates={1=ReplicaState(replicaKey=ReplicaKey(id=1, directoryId=<undefined>), endOffset=Optional.empty, lastFetchTimestamp=-1, lastCaughtUpTimestamp=-1, hasAcknowledgedLeader=true)}) from CandidateState(localId=1, localDirectoryId=kXUJD2A9YWQ2GIJctGNUGg, epoch=2, retries=1, epochElection=EpochElection(voterStates={1=VoterState(replicaKey=ReplicaKey(id=1, directoryId=<undefined>), state=GRANTED)}), highWatermark=Optional.empty, electionTimeoutMs=1877) (org.apache.kafka.raft.QuorumState)
[2025-05-17 12:08:00,388] INFO [RaftManager id=1] Completed transition to Leader(localReplicaKey=ReplicaKey(id=1, directoryId=kXUJD2A9YWQ2GIJctGNUGg), epoch=2, epochStartOffset=41, highWatermark=Optional.empty, voterStates={1=ReplicaState(replicaKey=ReplicaKey(id=1, directoryId=<undefined>), endOffset=Optional.empty, lastFetchTimestamp=-1, lastCaughtUpTimestamp=-1, hasAcknowledgedLeader=true)}) from CandidateState(localId=1, localDirectoryId=kXUJD2A9YWQ2GIJctGNUGg, epoch=2, retries=1, epochElection=EpochElection(voterStates={1=VoterState(replicaKey=ReplicaKey(id=1, directoryId=<undefined>), state=GRANTED)}), highWatermark=Optional.empty, electionTimeoutMs=1877) (org.apache.kafka.raft.QuorumState)
[2025-05-17 12:08:00,411] INFO [kafka-1-raft-outbound-request-thread]: Starting (org.apache.kafka.raft.KafkaNetworkChannel$SendThread)
[2025-05-17 12:08:00,411] INFO [kafka-1-raft-io-thread]: Starting (org.apache.kafka.raft.KafkaRaftClientDriver)
[2025-05-17 12:08:00,439] INFO [MetadataLoader id=1] initializeNewPublishers: the loader is still catching up because we still don't know the high water mark yet. (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,440] INFO [ControllerServer id=1] Waiting for controller quorum voters future (kafka.server.ControllerServer)
[2025-05-17 12:08:00,440] INFO [ControllerServer id=1] Finished waiting for controller quorum voters future (kafka.server.ControllerServer)
[2025-05-17 12:08:00,446] INFO [RaftManager id=1] High watermark set to LogOffsetMetadata(offset=42, metadata=Optional[(segmentBaseOffset=0,relativePositionInSegment=3321)]) for the first time for epoch 2 based on indexOfHw 0 and voters [ReplicaState(replicaKey=ReplicaKey(id=1, directoryId=<undefined>), endOffset=Optional[LogOffsetMetadata(offset=42, metadata=Optional[(segmentBaseOffset=0,relativePositionInSegment=3321)])], lastFetchTimestamp=-1, lastCaughtUpTimestamp=-1, hasAcknowledgedLeader=true)] (org.apache.kafka.raft.LeaderState)
[2025-05-17 12:08:00,469] INFO [RaftManager id=1] Registered the listener org.apache.kafka.image.loader.MetadataLoader@911175127 (org.apache.kafka.raft.KafkaRaftClient)
[2025-05-17 12:08:00,472] INFO [RaftManager id=1] Setting the next offset of org.apache.kafka.image.loader.MetadataLoader@911175127 to 0 since there are no snapshots (org.apache.kafka.raft.KafkaRaftClient)
[2025-05-17 12:08:00,477] INFO [MetadataLoader id=1] maybePublishMetadata(LOG_DELTA): The loader is still catching up because we have loaded up to offset 0, but the high water mark is 42 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,493] INFO [RaftManager id=1] Registered the listener org.apache.kafka.controller.QuorumController$QuorumMetaLogListener@2004527313 (org.apache.kafka.raft.KafkaRaftClient)
[2025-05-17 12:08:00,494] INFO [RaftManager id=1] Setting the next offset of org.apache.kafka.controller.QuorumController$QuorumMetaLogListener@2004527313 to 0 since there are no snapshots (org.apache.kafka.raft.KafkaRaftClient)
[2025-05-17 12:08:00,495] INFO [MetadataLoader id=1] maybePublishMetadata(LOG_DELTA): The loader finished catching up to the current high water mark of 42 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,500] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing SnapshotGenerator with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,503] INFO [controller-1-ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-05-17 12:08:00,503] INFO [controller-1-ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-05-17 12:08:00,505] INFO [controller-1-ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-05-17 12:08:00,508] INFO [controller-1-ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2025-05-17 12:08:00,534] INFO [ExpirationReaper-0-null]: Starting (org.apache.kafka.server.purgatory.DelayedOperationPurgatory$ExpiredOperationReaper)
[2025-05-17 12:08:00,628] INFO [ControllerServer id=1] Waiting for the controller metadata publishers to be installed (kafka.server.ControllerServer)
[2025-05-17 12:08:00,629] INFO [ControllerServer id=1] Finished waiting for the controller metadata publishers to be installed (kafka.server.ControllerServer)
[2025-05-17 12:08:00,629] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing KRaftMetadataCachePublisher with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,630] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing FeaturesPublisher with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,630] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Enabling request processing. (kafka.network.SocketServer)
[2025-05-17 12:08:00,633] INFO [ControllerServer id=1] Loaded new metadata Features(metadataVersion=4.0-IV3, finalizedFeatures={group.version=1, transaction.version=2, metadata.version=25}, finalizedFeaturesEpoch=41). (org.apache.kafka.metadata.publisher.FeaturesPublisher)
[2025-05-17 12:08:00,634] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ControllerRegistrationsPublisher with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,634] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ControllerRegistrationManager with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,641] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing DynamicConfigPublisher controller id=1 with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,642] INFO [ControllerRegistrationManager id=1 incarnation=3-75sZDSRxW1mJKKjVW4XQ] Found registration for U_dm2DasQhKvbKugftQg5g instead of our incarnation. (kafka.server.ControllerRegistrationManager)
[2025-05-17 12:08:00,642] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing DynamicClientQuotaPublisher controller id=1 with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,645] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing DynamicTopicClusterQuotaPublisher controller id=1 with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,646] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ScramPublisher controller id=1 with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,648] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing DelegationTokenPublisher controller id=1 with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,655] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ControllerMetadataMetricsPublisher with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,657] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing AclPublisher controller id=1 with a snapshot at offset 41 (org.apache.kafka.image.loader.MetadataLoader)
[2025-05-17 12:08:00,636] ERROR Unable to start acceptor for ListenerName(CONTROLLER) (kafka.network.DataPlaneAcceptor)
org.apache.kafka.common.KafkaException: Socket server failed to bind to 0.0.0.0:9093: Address already in use.
	at org.apache.kafka.server.ServerSocketFactory$KafkaServerSocketFactory.openServerSocket(ServerSocketFactory.java:56) ~[kafka-server-4.0.0.jar:?]
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:642) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.Acceptor.liftedTree1$1(SocketServer.scala:543) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.Acceptor.start(SocketServer.scala:538) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.SocketServer.$anonfun$enableRequestProcessing$2(SocketServer.scala:196) ~[kafka_2.13-4.0.0.jar:?]
	at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.uniWhenCompleteStage(CompletableFuture.java:887) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.whenComplete(CompletableFuture.java:2325) ~[?:?]
	at kafka.network.SocketServer.chainAcceptorFuture$1(SocketServer.scala:189) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.SocketServer.$anonfun$enableRequestProcessing$4(SocketServer.scala:202) ~[kafka_2.13-4.0.0.jar:?]
	at java.base/java.util.concurrent.ConcurrentHashMap$ValuesView.forEach(ConcurrentHashMap.java:4780) ~[?:?]
	at kafka.network.SocketServer.enableRequestProcessing(SocketServer.scala:202) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.ControllerServer.startup(ControllerServer.scala:390) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.KafkaRaftServer.$anonfun$startup$1(KafkaRaftServer.scala:95) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.KafkaRaftServer.$anonfun$startup$1$adapted(KafkaRaftServer.scala:95) ~[kafka_2.13-4.0.0.jar:?]
	at scala.Option.foreach(Option.scala:437) [scala-library-2.13.15.jar:?]
	at kafka.server.KafkaRaftServer.startup(KafkaRaftServer.scala:95) [kafka_2.13-4.0.0.jar:?]
	at kafka.Kafka$.main(Kafka.scala:97) [kafka_2.13-4.0.0.jar:?]
	at kafka.Kafka.main(Kafka.scala) [kafka_2.13-4.0.0.jar:?]
Caused by: java.net.BindException: Address already in use
	at java.base/sun.nio.ch.Net.bind0(Native Method) ~[?:?]
	at java.base/sun.nio.ch.Net.bind(Net.java:555) ~[?:?]
	at java.base/sun.nio.ch.ServerSocketChannelImpl.netBind(ServerSocketChannelImpl.java:337) ~[?:?]
	at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:294) ~[?:?]
	at java.base/sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:89) ~[?:?]
	at org.apache.kafka.server.ServerSocketFactory$KafkaServerSocketFactory.openServerSocket(ServerSocketFactory.java:53) ~[kafka-server-4.0.0.jar:?]
	... 18 more
[2025-05-17 12:08:00,685] INFO [controller-1-to-controller-registration-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
[2025-05-17 12:08:00,686] INFO [ControllerRegistrationManager id=1 incarnation=3-75sZDSRxW1mJKKjVW4XQ] initialized channel manager. (kafka.server.ControllerRegistrationManager)
[2025-05-17 12:08:00,687] INFO [ControllerServer id=1] Waiting for all of the authorizer futures to be completed (kafka.server.ControllerServer)
[2025-05-17 12:08:00,687] INFO [ControllerServer id=1] Finished waiting for all of the authorizer futures to be completed (kafka.server.ControllerServer)
[2025-05-17 12:08:00,687] INFO [controller-1-to-controller-registration-channel-manager]: Recorded new KRaft controller, from now on will use node localhost:9093 (id: 1 rack: null isFenced: false) (kafka.server.NodeToControllerRequestThread)
[2025-05-17 12:08:00,687] INFO [ControllerServer id=1] Waiting for all of the SocketServer Acceptors to be started (kafka.server.ControllerServer)
[2025-05-17 12:08:00,688] ERROR [ControllerServer id=1] Received a fatal error while waiting for all of the SocketServer Acceptors to be started (kafka.server.ControllerServer)
java.lang.RuntimeException: Unable to start acceptor for ListenerName(CONTROLLER)
	at kafka.network.Acceptor.liftedTree1$1(SocketServer.scala:558) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.Acceptor.start(SocketServer.scala:538) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.SocketServer.$anonfun$enableRequestProcessing$2(SocketServer.scala:196) ~[kafka_2.13-4.0.0.jar:?]
	at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.uniWhenCompleteStage(CompletableFuture.java:887) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.whenComplete(CompletableFuture.java:2325) ~[?:?]
	at kafka.network.SocketServer.chainAcceptorFuture$1(SocketServer.scala:189) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.SocketServer.$anonfun$enableRequestProcessing$4(SocketServer.scala:202) ~[kafka_2.13-4.0.0.jar:?]
	at java.base/java.util.concurrent.ConcurrentHashMap$ValuesView.forEach(ConcurrentHashMap.java:4780) ~[?:?]
	at kafka.network.SocketServer.enableRequestProcessing(SocketServer.scala:202) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.ControllerServer.startup(ControllerServer.scala:390) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.KafkaRaftServer.$anonfun$startup$1(KafkaRaftServer.scala:95) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.KafkaRaftServer.$anonfun$startup$1$adapted(KafkaRaftServer.scala:95) ~[kafka_2.13-4.0.0.jar:?]
	at scala.Option.foreach(Option.scala:437) [scala-library-2.13.15.jar:?]
	at kafka.server.KafkaRaftServer.startup(KafkaRaftServer.scala:95) [kafka_2.13-4.0.0.jar:?]
	at kafka.Kafka$.main(Kafka.scala:97) [kafka_2.13-4.0.0.jar:?]
	at kafka.Kafka.main(Kafka.scala) [kafka_2.13-4.0.0.jar:?]
Caused by: org.apache.kafka.common.KafkaException: Socket server failed to bind to 0.0.0.0:9093: Address already in use.
	at org.apache.kafka.server.ServerSocketFactory$KafkaServerSocketFactory.openServerSocket(ServerSocketFactory.java:56) ~[kafka-server-4.0.0.jar:?]
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:642) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.Acceptor.liftedTree1$1(SocketServer.scala:543) ~[kafka_2.13-4.0.0.jar:?]
	... 16 more
Caused by: java.net.BindException: Address already in use
	at java.base/sun.nio.ch.Net.bind0(Native Method) ~[?:?]
	at java.base/sun.nio.ch.Net.bind(Net.java:555) ~[?:?]
	at java.base/sun.nio.ch.ServerSocketChannelImpl.netBind(ServerSocketChannelImpl.java:337) ~[?:?]
	at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:294) ~[?:?]
	at java.base/sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:89) ~[?:?]
	at org.apache.kafka.server.ServerSocketFactory$KafkaServerSocketFactory.openServerSocket(ServerSocketFactory.java:53) ~[kafka-server-4.0.0.jar:?]
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:642) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.Acceptor.liftedTree1$1(SocketServer.scala:543) ~[kafka_2.13-4.0.0.jar:?]
	... 16 more
[2025-05-17 12:08:00,690] ERROR Encountered fatal fault: caught exception (org.apache.kafka.server.fault.ProcessTerminatingFaultHandler)
java.lang.RuntimeException: Received a fatal error while waiting for all of the SocketServer Acceptors to be started
	at org.apache.kafka.server.util.FutureUtils.waitWithLogging(FutureUtils.java:73) ~[kafka-server-common-4.0.0.jar:?]
	at kafka.server.ControllerServer.startup(ControllerServer.scala:415) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.KafkaRaftServer.$anonfun$startup$1(KafkaRaftServer.scala:95) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.KafkaRaftServer.$anonfun$startup$1$adapted(KafkaRaftServer.scala:95) ~[kafka_2.13-4.0.0.jar:?]
	at scala.Option.foreach(Option.scala:437) [scala-library-2.13.15.jar:?]
	at kafka.server.KafkaRaftServer.startup(KafkaRaftServer.scala:95) [kafka_2.13-4.0.0.jar:?]
	at kafka.Kafka$.main(Kafka.scala:97) [kafka_2.13-4.0.0.jar:?]
	at kafka.Kafka.main(Kafka.scala) [kafka_2.13-4.0.0.jar:?]
Caused by: java.lang.RuntimeException: Unable to start acceptor for ListenerName(CONTROLLER)
	at kafka.network.Acceptor.liftedTree1$1(SocketServer.scala:558) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.Acceptor.start(SocketServer.scala:538) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.SocketServer.$anonfun$enableRequestProcessing$2(SocketServer.scala:196) ~[kafka_2.13-4.0.0.jar:?]
	at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.uniWhenCompleteStage(CompletableFuture.java:887) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.whenComplete(CompletableFuture.java:2325) ~[?:?]
	at kafka.network.SocketServer.chainAcceptorFuture$1(SocketServer.scala:189) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.SocketServer.$anonfun$enableRequestProcessing$4(SocketServer.scala:202) ~[kafka_2.13-4.0.0.jar:?]
	at java.base/java.util.concurrent.ConcurrentHashMap$ValuesView.forEach(ConcurrentHashMap.java:4780) ~[?:?]
	at kafka.network.SocketServer.enableRequestProcessing(SocketServer.scala:202) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.ControllerServer.startup(ControllerServer.scala:390) ~[kafka_2.13-4.0.0.jar:?]
	... 6 more
Caused by: org.apache.kafka.common.KafkaException: Socket server failed to bind to 0.0.0.0:9093: Address already in use.
	at org.apache.kafka.server.ServerSocketFactory$KafkaServerSocketFactory.openServerSocket(ServerSocketFactory.java:56) ~[kafka-server-4.0.0.jar:?]
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:642) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.Acceptor.liftedTree1$1(SocketServer.scala:543) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.Acceptor.start(SocketServer.scala:538) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.SocketServer.$anonfun$enableRequestProcessing$2(SocketServer.scala:196) ~[kafka_2.13-4.0.0.jar:?]
	at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.uniWhenCompleteStage(CompletableFuture.java:887) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.whenComplete(CompletableFuture.java:2325) ~[?:?]
	at kafka.network.SocketServer.chainAcceptorFuture$1(SocketServer.scala:189) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.SocketServer.$anonfun$enableRequestProcessing$4(SocketServer.scala:202) ~[kafka_2.13-4.0.0.jar:?]
	at java.base/java.util.concurrent.ConcurrentHashMap$ValuesView.forEach(ConcurrentHashMap.java:4780) ~[?:?]
	at kafka.network.SocketServer.enableRequestProcessing(SocketServer.scala:202) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.ControllerServer.startup(ControllerServer.scala:390) ~[kafka_2.13-4.0.0.jar:?]
	... 6 more
Caused by: java.net.BindException: Address already in use
	at java.base/sun.nio.ch.Net.bind0(Native Method) ~[?:?]
	at java.base/sun.nio.ch.Net.bind(Net.java:555) ~[?:?]
	at java.base/sun.nio.ch.ServerSocketChannelImpl.netBind(ServerSocketChannelImpl.java:337) ~[?:?]
	at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:294) ~[?:?]
	at java.base/sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:89) ~[?:?]
	at org.apache.kafka.server.ServerSocketFactory$KafkaServerSocketFactory.openServerSocket(ServerSocketFactory.java:53) ~[kafka-server-4.0.0.jar:?]
	at kafka.network.Acceptor.openServerSocket(SocketServer.scala:642) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.Acceptor.liftedTree1$1(SocketServer.scala:543) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.Acceptor.start(SocketServer.scala:538) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.SocketServer.$anonfun$enableRequestProcessing$2(SocketServer.scala:196) ~[kafka_2.13-4.0.0.jar:?]
	at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.uniWhenCompleteStage(CompletableFuture.java:887) ~[?:?]
	at java.base/java.util.concurrent.CompletableFuture.whenComplete(CompletableFuture.java:2325) ~[?:?]
	at kafka.network.SocketServer.chainAcceptorFuture$1(SocketServer.scala:189) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.network.SocketServer.$anonfun$enableRequestProcessing$4(SocketServer.scala:202) ~[kafka_2.13-4.0.0.jar:?]
	at java.base/java.util.concurrent.ConcurrentHashMap$ValuesView.forEach(ConcurrentHashMap.java:4780) ~[?:?]
	at kafka.network.SocketServer.enableRequestProcessing(SocketServer.scala:202) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.server.ControllerServer.startup(ControllerServer.scala:390) ~[kafka_2.13-4.0.0.jar:?]
	... 6 more
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        [2025-05-17 12:08:05,608] INFO [NodeToControllerChannelManager id=1 name=heartbeat] Disconnecting from node 1 due to request timeout. (org.apache.kafka.clients.NetworkClient)
[2025-05-17 12:08:05,610] INFO [NodeToControllerChannelManager id=1 name=heartbeat] Cancelled in-flight BROKER_HEARTBEAT request with correlation id 12 due to node 1 being disconnected (elapsed time since creation: 4503ms, elapsed time since send: 4503ms, throttle time: 0ms, request timeout: 4500ms) (org.apache.kafka.clients.NetworkClient)
[2025-05-17 12:08:05,611] INFO [broker-1-to-controller-heartbeat-channel-manager]: Recorded new KRaft controller, from now on will use node localhost:9093 (id: 1 rack: null isFenced: false) (kafka.server.NodeToControllerRequestThread)
[2025-05-17 12:08:05,611] INFO [BrokerLifecycleManager id=1] Unable to send a heartbeat because the RPC got timed out before it could be sent. (kafka.server.BrokerLifecycleManager)
[2025-05-17 12:08:08,294] ERROR Encountered fatal fault: Unexpected error in raft IO thread (org.apache.kafka.server.fault.ProcessTerminatingFaultHandler)
org.apache.kafka.common.errors.CorruptRecordException: Unexpected EOF while attempting to read the next batch
Caused by: java.io.EOFException: Failed to read `log header` from file channel `sun.nio.ch.FileChannelImpl@7257d9c`. Expected to read 17 bytes, but reached end of file after reading 0 bytes. Started read from position 3230.
	at org.apache.kafka.common.utils.Utils.readFullyOrFail(Utils.java:1233) ~[kafka-clients-4.0.0.jar:?]
	at org.apache.kafka.common.record.FileLogInputStream.nextBatch(FileLogInputStream.java:69) ~[kafka-clients-4.0.0.jar:?]
	at org.apache.kafka.common.record.FileLogInputStream.nextBatch(FileLogInputStream.java:42) ~[kafka-clients-4.0.0.jar:?]
	at org.apache.kafka.common.record.RecordBatchIterator.makeNext(RecordBatchIterator.java:37) ~[kafka-clients-4.0.0.jar:?]
	at org.apache.kafka.common.record.RecordBatchIterator.makeNext(RecordBatchIterator.java:26) ~[kafka-clients-4.0.0.jar:?]
	at org.apache.kafka.common.utils.AbstractIterator.maybeComputeNext(AbstractIterator.java:79) ~[kafka-clients-4.0.0.jar:?]
	at org.apache.kafka.common.utils.AbstractIterator.hasNext(AbstractIterator.java:45) ~[kafka-clients-4.0.0.jar:?]
	at org.apache.kafka.common.record.FileRecords.searchForOffsetWithSize(FileRecords.java:317) ~[kafka-clients-4.0.0.jar:?]
	at org.apache.kafka.storage.internals.log.LogSegment.translateOffset(LogSegment.java:390) ~[kafka-storage-4.0.0.jar:?]
	at org.apache.kafka.storage.internals.log.LogSegment.translateOffset(LogSegment.java:371) ~[kafka-storage-4.0.0.jar:?]
	at org.apache.kafka.storage.internals.log.LogSegment.read(LogSegment.java:429) ~[kafka-storage-4.0.0.jar:?]
	at org.apache.kafka.storage.internals.log.LocalLog.lambda$read$12(LocalLog.java:507) ~[kafka-storage-4.0.0.jar:?]
	at org.apache.kafka.storage.internals.log.LocalLog.maybeHandleIOException(LocalLog.java:818) ~[kafka-storage-4.0.0.jar:?]
	at org.apache.kafka.storage.internals.log.LocalLog.maybeHandleIOException(LocalLog.java:192) ~[kafka-storage-4.0.0.jar:?]
	at org.apache.kafka.storage.internals.log.LocalLog.read(LocalLog.java:470) ~[kafka-storage-4.0.0.jar:?]
	at kafka.log.UnifiedLog.read(UnifiedLog.scala:1239) ~[kafka_2.13-4.0.0.jar:?]
	at kafka.raft.KafkaMetadataLog.read(KafkaMetadataLog.scala:77) ~[kafka_2.13-4.0.0.jar:?]
	at org.apache.kafka.raft.internals.KRaftControlRecordStateMachine.maybeLoadLog(KRaftControlRecordStateMachine.java:234) ~[kafka-raft-4.0.0.jar:?]
	at org.apache.kafka.raft.internals.KRaftControlRecordStateMachine.updateState(KRaftControlRecordStateMachine.java:116) ~[kafka-raft-4.0.0.jar:?]
	at org.apache.kafka.raft.KafkaRaftClient.appendAsLeader(KafkaRaftClient.java:1830) ~[kafka-raft-4.0.0.jar:?]
	at org.apache.kafka.raft.KafkaRaftClient.appendBatch(KafkaRaftClient.java:2922) ~[kafka-raft-4.0.0.jar:?]
	at org.apache.kafka.raft.KafkaRaftClient.maybeAppendBatches(KafkaRaftClient.java:2957) ~[kafka-raft-4.0.0.jar:?]
	at org.apache.kafka.raft.KafkaRaftClient.pollLeader(KafkaRaftClient.java:3049) ~[kafka-raft-4.0.0.jar:?]
	at org.apache.kafka.raft.KafkaRaftClient.pollCurrentState(KafkaRaftClient.java:3299) ~[kafka-raft-4.0.0.jar:?]
	at org.apache.kafka.raft.KafkaRaftClient.poll(KafkaRaftClient.java:3447) ~[kafka-raft-4.0.0.jar:?]
	at org.apache.kafka.raft.KafkaRaftClientDriver.doWork(KafkaRaftClientDriver.java:64) [kafka-raft-4.0.0.jar:?]
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136) [kafka-server-common-4.0.0.jar:?]
